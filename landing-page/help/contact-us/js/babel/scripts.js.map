{"version":3,"sources":["../scripts.js"],"names":["$","document","ready","countryCode","date","Date","month","getMonth","day","getDate","year","getFullYear","message","holidayApi","fetch","then","data","json","nextYear","newData","console","log","holidays","map","val","i","holidayDate","split","holidayYear","Number","holidayMonth","holidayDay","nextYearDate","nextYearYear","nextYearMonth","nextYearDay","name","html","show","err"],"mappings":";;AACAA,CAAC,CAACC,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAY;AAE5B,MAAIC,WAAW,GAAG,IAAlB;AAEA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIC,KAAK,GAAGF,IAAI,CAACG,QAAL,KAAkB,CAA9B;AACA,MAAIC,GAAG,GAAGJ,IAAI,CAACK,OAAL,EAAV;AACA,MAAIC,IAAI,GAAGN,IAAI,CAACO,WAAL,EAAX;AACA,MAAIC,OAAJ;AAEA,MAAIC,UAAU,gDAAd;AACAC,EAAAA,KAAK,WAAID,UAAJ,cAAkBH,IAAlB,cAA0BP,WAA1B,EAAL,CAA8CY,IAA9C,CAAmD,UAACC,IAAD,EAAU;AAAE,WAAOA,IAAI,CAACC,IAAL,EAAP;AAAqB,GAApF,EAAsFF,IAAtF,CAA2F,UAACC,IAAD,EAAU;AAEnG,QAAIE,QAAQ,GAAGR,IAAI,GAAG,CAAtB;AACAI,IAAAA,KAAK,WAAID,UAAJ,cAAkBK,QAAlB,cAA8Bf,WAA9B,EAAL,CAAkDY,IAAlD,CAAuD,UAACI,OAAD,EAAa;AAAE,aAAOA,OAAO,CAACF,IAAR,EAAP;AAAuB,KAA7F,EAA+FF,IAA/F,CAAoG,UAACI,OAAD,EAAa;AAC/GC,MAAAA,OAAO,CAACC,GAAR;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAJ+G,CAM/G;AACA;AACA;;AAEA,UAAIM,QAAQ,GAAGN,IAAf;AAEAM,MAAAA,QAAQ,CAACC,GAAT,CAAa,UAACC,GAAD,EAAMC,CAAN,EAAY;AAEvB;AACA,YAAIC,WAAW,GAAGF,GAAG,CAACpB,IAAtB;AACAsB,QAAAA,WAAW,GAAGA,WAAW,CAACC,KAAZ,CAAkB,GAAlB,CAAd;AACA,YAAIC,WAAW,GAAGC,MAAM,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAxB;AACA,YAAII,YAAY,GAAGD,MAAM,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAzB;AACA,YAAIK,UAAU,GAAGF,MAAM,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAvB,CAPuB,CAQvB;AACA;AAEA;;AACA,YAAIM,YAAY,GAAGb,OAAO,CAAC,CAAD,CAAP,CAAWf,IAA9B;AACA4B,QAAAA,YAAY,GAAGA,YAAY,CAACL,KAAb,CAAmB,GAAnB,CAAf;AACA,YAAIM,YAAY,GAAGD,YAAY,CAAC,CAAD,CAA/B;AACA,YAAIE,aAAa,GAAGF,YAAY,CAAC,CAAD,CAAhC;AACA,YAAIG,WAAW,GAAGH,YAAY,CAAC,CAAD,CAA9B;;AAEA,YAAItB,IAAI,IAAIkB,WAAZ,EAAyB;AACvB,cAAIJ,GAAG,CAACY,IAAJ,sBAA8BZ,GAAG,CAACY,IAAJ,kCAA9B,IAA4EZ,GAAG,CAACY,IAAJ,4BAA5E,IAAoHZ,GAAG,CAACY,IAAJ,iBAApH,IAAiJZ,GAAG,CAACY,IAAJ,mBAAjJ,IAAgLZ,GAAG,CAACY,IAAJ,mBAAhL,IAA+MZ,GAAG,CAACY,IAAJ,mBAAnN,EAAgP;AAE9O,gBAAI9B,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAIwB,YAA5B,EAA0C;AACxClB,cAAAA,OAAO,6BACLY,GAAG,CAACY,IADC,cACON,YADP,cACuBC,UADvB,cACqCH,WADrC,kCAELT,OAAO,CAAC,CAAD,CAAP,CAAWiB,IAFN,cAEcF,aAFd,cAE+BC,WAF/B,cAE8CF,YAF9C,sBAAP;AAIAjC,cAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBqC,IAAxB,CAA6BzB,OAA7B;AACAZ,cAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsBsC,IAAtB;AACD,aAPD,MAOO,IAAIhC,KAAK,IAAIwB,YAAb,EAA2B;AAChClB,cAAAA,OAAO,iBAAUY,GAAG,CAACY,IAAd,cAAsBN,YAAtB,cAAsCC,UAAtC,cAAoDH,WAApD,UAAP;AACA5B,cAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBqC,IAAxB,CAA6BzB,OAA7B;AACAZ,cAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsBsC,IAAtB;AACD;AAEF;AACF;AACF,OApCD;AAsCD,KAlDD;AAqDD,GAxDD,WAwDS,UAACC,GAAD,EAAS;AAChBnB,IAAAA,OAAO,CAACC,GAAR;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD,GA3DD;AA6DD,CAxED","sourcesContent":["\r\n$(document).ready(function () {\r\n\r\n  var countryCode = \"US\";\r\n\r\n  var date = new Date();\r\n  var month = date.getMonth() + 1;\r\n  var day = date.getDate();\r\n  var year = date.getFullYear();\r\n  var message;\r\n\r\n  var holidayApi = `https://date.nager.at/api/v3/PublicHolidays`;\r\n  fetch(`${holidayApi}/${year}/${countryCode}`).then((data) => { return data.json(); }).then((data) => {\r\n\r\n    var nextYear = year + 1;\r\n    fetch(`${holidayApi}/${nextYear}/${countryCode}`).then((newData) => { return newData.json() }).then((newData) => {\r\n      console.log(`next year data`);\r\n      console.log(newData);\r\n      console.log(`current year data`);\r\n      console.log(data);\r\n\r\n      //? for dev\r\n      // month = 1;\r\n      // day = 2;\r\n\r\n      var holidays = data;\r\n\r\n      holidays.map((val, i) => {\r\n\r\n        // console.log(val);\r\n        var holidayDate = val.date;\r\n        holidayDate = holidayDate.split('-');\r\n        var holidayYear = Number(holidayDate[0]);\r\n        var holidayMonth = Number(holidayDate[1]);\r\n        var holidayDay = Number(holidayDate[2]);\r\n        // console.log(month, holidayMonth);\r\n        // console.log(day, holidayDay);\r\n\r\n        //? for new years\r\n        var nextYearDate = newData[0].date;\r\n        nextYearDate = nextYearDate.split('-');\r\n        var nextYearYear = nextYearDate[0];\r\n        var nextYearMonth = nextYearDate[1];\r\n        var nextYearDay = nextYearDate[2];\r\n\r\n        if (year == holidayYear) {\r\n          if (val.name !== `Good Friday` && val.name !== `Martin Luther King, Jr. Day` && val.name !== `Washington's Birthday` && val.name !== `Juneteenth` && val.name !== `Columbus Day` && val.name !== `Veterans Day` && val.name !== `Veterans Day`) {\r\n\r\n            if (month == 12 && month == holidayMonth) {\r\n              message = `\r\n          <h3>${val.name} ${holidayMonth}/${holidayDay}/${holidayYear}</h3>\r\n          <h3>${newData[0].name} ${nextYearMonth}/${nextYearDay}/${nextYearYear}</h3>\r\n          `;\r\n              $('.holiday-closure p').html(message);\r\n              $('.holiday-closure').show();\r\n            } else if (month == holidayMonth) {\r\n              message = `<h3>${val.name} ${holidayMonth}/${holidayDay}/${holidayYear}</h3>`;\r\n              $('.holiday-closure p').html(message);\r\n              $('.holiday-closure').show();\r\n            }\r\n\r\n          }\r\n        }\r\n      });\r\n\r\n    });\r\n\r\n\r\n  }).catch((err) => {\r\n    console.log(`oops something went wrong`);\r\n    console.log(err);\r\n  });\r\n\r\n});"],"file":"scripts.js"}
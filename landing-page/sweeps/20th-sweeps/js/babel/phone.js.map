{"version":3,"sources":["../phone.js"],"names":["phoneConvert","string","newString","match","join","includes","substring"],"mappings":";;;;;;;AAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAASC,MAAT,EAAiB;AACzC,MAAIC,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAa,cAAb,CAAhB;;AAEA,MAAID,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAO,EAAP;AACD,GALwC,CAOzC;;;AACAA,EAAAA,SAAS,GAAGA,SAAS,CAACE,IAAV,CAAe,EAAf,CAAZ,CARyC,CAUzC;AACA;;AAEA,MAAIF,SAAS,CAAC,CAAD,CAAT,CAAaG,QAAb,CAAsB,GAAtB,CAAJ,EAAgC;AAAEH,IAAAA,SAAS,GAAG,MAAMA,SAAlB;AAA8B,GAAhE,MAAuE;AAAEA,IAAAA,SAAS,GAAG,OAAOA,SAAnB;AAA+B,GAb/D,CAezC;;;AACAA,EAAAA,SAAS,GAAGA,SAAS,CAACI,SAAV,CAAoB,CAApB,EAAuB,EAAvB,CAAZ;AAEA,SAAOJ,SAAP;AACD,CAnBI","sourcesContent":["export const phoneConvert = function(string) {\r\n    let newString = string.match(/[0-9]{0,14}/g);\r\n  \r\n    if (newString === null) {\r\n      return '';\r\n    }\r\n  \r\n    // Join parts returned from RegEx match\r\n    newString = newString.join('');\r\n  \r\n    // Start number with \"+\"\r\n    // newString = '+' + newString;\r\n\r\n    if (newString[0].includes('1')) { newString = '+' + newString; }  else { newString = '+1' + newString; }\r\n  \r\n    // Limit length to 15 characters\r\n    newString = newString.substring(0, 15);\r\n  \r\n    return newString;\r\n  };\r\n"],"file":"phone.js"}